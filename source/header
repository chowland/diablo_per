!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! header, the header file for diablo.                              VERSION 2.5
! This file contains definitions of global parameters and global variables.
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! implicit none

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! Spatial resolution parameters
! (We hardwire these into the code so that the compiler may perform
!  optimizations based on the grid size at compile time).
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
integer   nx, ny, nz, n_th
integer   nx_th, ny_th, nz_th
include   'grid_def'

integer nx_s, ny_s, nz_s
integer nx_s_th, ny_s_th, nz_s_th
include 'grid_def_mpi'

include 'header_mpi'

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! Input parameters and runtime variables
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
logical use_mpi
character*35 flavor
character mpi_io_num
integer mpi_num
real*8  nu, lx, ly, lz, delta_t, kick, ubulk0, px0
real*8  CFL

integer nx_t, ny_t, nz_t, num_per_dir_t
integer n_time_steps, num_per_dir, time_ad_meth, verbosity
integer ic_type, f_type
real*8 save_flow_int, save_stats_int
real*8  Pff_sum, target_Reb
integer previous_time_step
integer update_dt
logical variable_dt, first_time, force_shear
logical movie, create_new_flow
integer nx_mov, nx_mov_th, ny_mov, ny_mov_th, nz_mov, nz_mov_th
common /input / &
    nu, lx, ly, lz, delta_t, kick, target_Reb, ubulk0, px0,&
    n_time_steps, num_per_dir, time_ad_meth, verbosity,&
    save_flow_int, save_stats_int, ic_type, f_type, cfl,&
    pff_sum, previous_time_step, movie, create_new_flow,&
    update_dt,variable_dt,first_time,use_mpi,&
    flavor, mpi_io_num, mpi_num, force_shear,&
    nx_mov, nx_mov_th, ny_mov, ny_mov_th, nz_mov, nz_mov_th

real*8  time
integer time_step, rk_step, nxm, nym, nzm, tnkz, tnky, &
    nkx_t, tnkz_t
common /runtime_vars/ time, &
    time_step, rk_step, nxm, nym, nzm, tnkz, tnky, &
    nx_t, ny_t, nz_t, nkx_t, tnkz_t, num_per_dir_t

integer time_array(8)
real*8 start_time,end_time,time_limit
common /timings/ start_time,end_time,time_limit

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|! Parameters for scalar advection
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8  Ri_tau(1:n_th), Pr(1:n_th), reaction(1:n_th)
logical create_new_th(1:n_th), background_grad(1:n_th)
integer num_read_th
integer read_th_index(1:n_th)
logical filter_th(1:n_th)
integer filter_int(1:n_th)
integer jstart_th(1:n_th),jend_th(1:n_th)

common /scalar_vars/ &
    Ri_tau, Pr, reaction, jstart_th, jend_th, num_read_th, &
    filter_int, read_th_index, &
    create_new_th, filter_th, background_grad

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|! Parameters for Chemotaxis simulations
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8 chi(1:n_th),c0(1:n_th),thrms(1:n_th), &
    v_s(1:n_th),thflux(1:n_th)
common /chemotaxis_vars/ chi,c0,thrms,v_s,thflux

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|! Parameters for Geophysical flow
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|

real*8  i_Ro_tau, phi, gamma, g_tau, c_sin, c_cos, tau_w, beta
common /geo_vars/ i_Ro_tau, phi, gamma, g_tau, c_sin, c_cos, tau_w, beta

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|! Parameters for oscillatory pressure forcing
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8 omega0, amp_omega0
common /oscill_vars/ omega0, amp_omega0

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! Parameters for backgroud density gradient
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8 drhodx,drhody, lf
common /drhodx_vars/ drhodx,drhody, lf

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|! Parameters for Low Reynolds number periodic advection
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8 EK0, EK, EK_local, epsilon_target, EK_sum, epsilon_forcing, &
    eta_target, Re_lambda
common /stirring_vars/ &
    EK0, EK, EK_local, epsilon_target, EK_sum, epsilon_forcing, &
    eta_target, Re_lambda


!----*|--.---------.---------.---------.---------.---------.---------.-|-------|! Parameters for IC_TYPE 4 (Shear + IGW)
real*8 u04, steep
integer kx4, ky4, kz4
common /igw_pars/ u04, steep, kx4, ky4, kz4

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! RKW3 parameters
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8  h_bar(3), beta_bar(3), zeta_bar(3)
common /rkw3_params/ h_bar, beta_bar, zeta_bar

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! FFT parameters
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8  kx  (0:nx/3), ky  (0:2*(ny/3)), kz  (0:2*(nz/3)), &
    kx2 (0:nx/3), ky2 (0:2*(ny/3)), kz2 (0:2*(nz/3)), &
    pi, eps, rnx, rny, rnz
complex*16 cikx(0:nx/3), ciky(0:2*(ny/3)), cikz(0:2*(nz/3)), ci

complex*16 cikx_s(0:nx/3), cikz_s(0:2*(nz/3))
real*8 kx_s(0:nx/3),kz_s(0:2*(nz/3))
real*8 kx2_s(0:nx/3),kz2_s(0:2*(nz/3))

integer*8  fftw_x_to_p_plan, fftw_x_to_f_plan, &
    fftw_y_to_p_plan, fftw_y_to_f_plan, &
    fftw_z_to_p_plan, fftw_z_to_f_plan, &
    fftw_test_plan
integer nkx, nky, nkz

common /fft_params/
    kx, ky, kz, &
    kx_s, kz_s, &
    kx2, ky2, kz2, &
    kx2_s, kz2_s, &
    pi, eps, rnx, rny, rnz, cikx, ciky, cikz, &
    cikx_s,cikz_s, ci, &
    fftw_x_to_p_plan, fftw_x_to_f_plan, &
    fftw_y_to_p_plan, fftw_y_to_f_plan, &
    fftw_z_to_p_plan, fftw_z_to_f_plan, &
    fftw_test_plan, &
    nkx, nky, nkz

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! FFT_TH parameters
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8  kx_th  (0:nx_th/3), ky_th  (0:2*(ny_th/3)), &
    kz_th  (0:2*(nz_th/3)), &
    kx2_th (0:nx_th/3), ky2_th (0:2*(ny_th/3)), &
    kz2_th (0:2*(nz_th/3)), &
    rnx_th, rny_th, rnz_th
complex*16 cikx_th(0:nx_th/3), ciky_th(0:2*(ny_th/3)), &
    cikz_th(0:2*(nz_th/3))

complex*16 cikx_s_th(0:nx_th/3), cikz_s_th(0:2*(nz_th/3))
real*8 kx_s_th(0:nx_th/3),kz_s_th(0:2*(nz_th/3))
real*8 kx2_s_th(0:nx_th/3),kz2_s_th(0:2*(nz_th/3))

integer*8  fftw_x_to_p_plan_th, fftw_x_to_f_plan_th, &
    fftw_y_to_p_plan_th, fftw_y_to_f_plan_th, &
    fftw_z_to_p_plan_th, fftw_z_to_f_plan_th, &
    fftw_test_plan_th
integer nkx_th, nky_th, nkz_th
integer tnky_th,tnkz_th
integer nzm_th,nxm_th,nym_th

common /fft_params_th/
    kx_th, ky_th, kz_th, &
    kx_s_th, kz_s_th, &
    kx2_th, ky2_th, kz2_th, &
    kx2_s_th, kz2_s_th, &
    rnx_th, rny_th, rnz_th, &
    cikx_th, ciky_th, cikz_th, &
    cikx_s_th,cikz_s_th, &
    fftw_x_to_p_plan_th, fftw_x_to_f_plan_th, &
    fftw_y_to_p_plan_th, fftw_y_to_f_plan_th, &
    fftw_z_to_p_plan_th, fftw_z_to_f_plan_th, &
    fftw_test_plan_th, &
    nkx_th, nky_th, nkz_th, &
    tnky_th, tnkz_th, &
    nxm_th, nym_th, nzm_th


!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! Grid parameters
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8  gx(0:nx+1), gy(0:ny+1), gz(0:nz+1), &
    gx_s(0:nx+1),gy_s(0:ny+1),gz_s(0:nz+1), &
    dx(0:nx+1), dy(0:ny+1), dz(0:nz+1), &
    dx_s(0:nx+1), dy_s(0:ny+1), dz_s(0:nz+1), & &
    gx_th(0:nx_th+1), gy_th(0:ny_th+1), gz_th(0:nz_th+1), &
    gx_s_th(0:nx_th+1),gy_s_th(0:ny_th+1),gz_s_th(0:nz_th+1), &
    dx_th(0:nx_th+1), dy_th(0:ny_th+1), dz_th(0:nz_th+1), &
    dx_s_th(0:nx_th+1),dy_s_th(0:ny_th+1),dz_s_th(0:nz_th+1), &
    gxf(0:nx+1),  gyf(0:ny+1),  gzf(0:nz+1), &
    dxf(0:nx+1),  dyf(0:ny+1),  dzf(0:nz+1)
integer jstart,jend

common /grid_params/ gx_th, gy_th, gz_th, dx_th, dy_th, dz_th, &
    gx_s_th, gy_s_th, gz_s_th, &
    dx_s_th, dy_s_th, dz_s_th, &
    gx,  gy,  gz,  dx,  dy,  dz, &
    gx_s, gy_s, gz_s, dx_s, dy_s, dz_s, &
    gxf, gyf, gzf, dxf, dyf, dzf, &
    jstart, jend

!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
! Global variables
!----*|--.---------.---------.---------.---------.---------.---------.-|-------|
real*8  u1 (0:nx+1,0:nz_s,0:ny_s+1), u2 (0:nx+1,0:nz_s,0:ny_s+1), &
    u3 (0:nx+1,0:nz_s,0:ny_s+1), p  (0:nx+1,0:nz_s,0:ny_s+1), &
    r1 (0:nx+1,0:nz_s,0:ny_s+1), r2 (0:nx+1,0:nz_s,0:ny_s+1), &
    r3 (0:nx+1,0:nz_s,0:ny_s+1), f1 (0:nx+1,0:nz_s,0:ny_s+1), &
    f2 (0:nx+1,0:nz_s,0:ny_s+1), f3 (0:nx+1,0:nz_s,0:ny_s+1), &
    s1 (0:nx+1,0:nz_s,0:ny_s+1), &
    th (0:nx_th+1,0:nz_s_th,0:ny_s_th+1,1:n_th), &
    sth1 (0:nx_th+1,0:nz_s_th,0:ny_s_th+1), &
    sth2 (0:nx_th+1,0:nz_s_th,0:ny_s_th+1), &
    fth (0:nx_th+1,0:nz_s_th,0:ny_s_th+1,1:n_th), &
    rth (0:nx_th+1,0:nz_s_th,0:ny_s_th+1,1:n_th)

real*8     matl (0:nx-1,0:ny+1), matd(0:nx-1,0:ny+1), &
    matu(0:nx-1,0:ny+1), vec(0:nx-1,0:ny+1)
real*8     matl_t (0:nx-1,0:ny+1), matd_t(0:nx-1,0:ny+1), &
    matu_t(0:nx-1,0:ny+1)
complex*16 vec_c(0:nx/3,0:ny+1)
real*8     matl_c(0:nx/3,0:ny+1),matd_c(0:nx/3,0:ny+1), &
    matu_c(0:nx/3,0:ny+1)

complex*16 cu1(0:nx_s/2,0:nz_s,0:ny+1), &
    cu2(0:nx_s/2,0:nz_s,0:ny+1), &
    cu3(0:nx_s/2,0:nz_s,0:ny+1), &
    cp (0:nx_s/2,0:nz_s,0:ny+1), &
    cr1(0:nx_s/2,0:nz_s,0:ny+1), &
    cr2(0:nx_s/2,0:nz_s,0:ny+1), &
    cr3(0:nx_s/2,0:nz_s,0:ny+1), &
    cf1(0:nx_s/2,0:nz_s,0:ny+1), &
    cf2(0:nx_s/2,0:nz_s,0:ny+1), &
    cf3(0:nx_s/2,0:nz_s,0:ny+1), &
    cs1(0:nx_s/2,0:nz_s,0:ny+1), &
    cth(0:nx_s_th/2,0:nz_s_th,0:ny_th+1,1:n_th), &
    csth1(0:nx_s_th/2,0:nz_s_th,0:ny_th+1), &
    csth2(0:nx_s_th/2,0:nz_s_th,0:ny_th+1), &
    cfth(0:nx_s_th/2,0:nz_s_th,0:ny_th+1,1:n_th), &
    crth(0:nx_s_th/2,0:nz_s_th,0:ny_th+1,1:n_th)


equivalence (u1,cu1), &
    (u2,cu2), &
    (u3,cu3), &
    (r1,cr1), &
    (r2,cr2), &
    (r3,cr3), &
    (f1,cf1), &
    (f2,cf2), &
    (f3,cf3), &
    (p,cp), &
    (s1,cs1), &
    (rth,crth), &
    (sth1,csth1), &
    (sth2,csth2), &
    (th,cth), &
    (fth, cfth)

! Variables for tkebudget
real*8 epsilon(0:ny+1)

real*8 f_phase(0:nx_s/2,0:nz_s,0:ny+1)

integer nsamples

common /global_vars/ u1, u2, u3, p, r1, r2, r3, &
    f1, f2, f3, th, fth, rth, f_phase
    ! cu1,cu2,cu3,cp,cr1,cr2,cr3,cf1,cf2,cf3
    ! cth,cfth,crth
